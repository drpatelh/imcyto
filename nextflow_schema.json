{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/imcyto/master/nextflow_schema.json",
    "title": "nf-core/imcyto pipeline parameters",
    "description": "Image Mass Cytometry analysis pipeline.",
    "type": "object",
    "properties": {
        "Generic options": {
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input": {
                    "type": "string",
                    "default": "data/*.mcd",
                    "description": "Path to input data file(s) (globs must be surrounded with quotes). Currently supported formats are *.mcd, *.ome.tiff, *.txt",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 4 columns, and a header row. See [usage docs](https://nf-co.re/atacseq/docs/usage#--input)."
                },
                "metadata": {
                    "type": "string",
                    "default": "./metadata.csv",
                    "description": "Path to metadata csv file indicating which images to merge in full stack and/or Ilastik stack",
                    "help_text": "Path to metadata `csv` file indicating which images to merge in full and/or Ilastik stack. The file should only contain 3 columns i.e. 'metal', 'full_stack' and 'ilastik_stack'. The `metal` column should contain all the metals used in your antibody panel. The `full_stack` and `ilastik_stack` entries should be `1` or `0` to indicate whether to include or exclude a metal for a given stack, respectively. See [`metadata.csv`](https://github.com/nf-core/test-datasets/blob/imcyto/inputs/metadata.csv) for an example."
                },
                "full_stack_cppipe": {
                    "type": "string",
                    "default": "false",
                    "description": "CellProfiler pipeline file required to create full stack (cppipe format)"
                },
                "ilastik_stack_cppipe": {
                    "type": "string",
                    "default": "false",
                    "description": "CellProfiler pipeline file required to create Ilastik stack (cppipe format)"
                },
                "segmentation_cppipe": {
                    "type": "string",
                    "default": "false",
                    "description": "CellProfiler pipeline file required for segmentation (cppipe format)"
                },
                "ilastik_training_ilp": {
                    "type": "string",
                    "default": "false",
                    "description": "Parameter file required by Ilastik (ilp format)"
                },
                "compensation_tiff": {
                    "type": "string",
                    "default": "false",
                    "description": "Tiff file for compensation analysis during CellProfiler preprocessing steps"
                },
                "plugins": {
                    "type": "string",
                    "default": "\"$baseDir/assets/plugins/\""
                }
            },
            "required": [
                "input",
                "metadata",
                "full_stack_cppipe",
                "ilastik_stack_cppipe",
                "segmentation_cppipe"
            ]
        },
        "Process skipping options": {
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_ilastik": {
                    "type": "boolean",
                    "default": "False",
                    "description": "Skip Ilastik processing step"
                }
            }
        },
        "Institutional config options": {
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs",
                    "default": "master",
                    "hidden": true
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files\nfrom the internet. If you don't need them, then this is not a problem. If you do need them,\nyou should download the files from the repo and tell nextflow where to find them with the `--custom_config_base` option."
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname",
                    "default": "false",
                    "hidden": true
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description",
                    "hidden": true,
                    "default": "false"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information",
                    "hidden": true,
                    "default": "false"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link",
                    "hidden": true,
                    "default": "false"
                }
            }
        },
        "Max job request options": {
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested  for any single job",
                    "default": 16,
                    "fa_icon": "<i class=\"fas fa-microchip\"></i>",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job",
                    "default": "128 GB",
                    "fa_icon": "<i class=\"fas fa-memory\"></i>",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job",
                    "default": "10d",
                    "fa_icon": "<i class=\"far fa-clock\"></i>",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "Pipeline template options": {
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text",
                    "hidden": true,
                    "fa_icon": "<i class=\"fas fa-question-circle\"></i>",
                    "default": "False"
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved",
                    "default": "./results",
                    "fa_icon": "<i class=\"fas fa-folder-open\"></i>"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See https://www.nextflow.io/docs/latest/process.html#publishdir for details.",
                    "fa_icon": "<i class=\"fas fa-copy\"></i>",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "mov"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "Workflow name",
                    "fa_icon": "<i class=\"fas fa-fingerprint\"></i>",
                    "help_text": "A custom name for the pipeline run. Unlike the core nextflow `-name` option with one hyphen this parameter can be reused multiple times, for example if using `-resume`. Passed through to steps such as MultiQC and used for things like report filenames and titles.",
                    "default": "false"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary",
                    "fa_icon": "<i class=\"fas fa-envelope\"></i>",
                    "help_text": "An email address to send a summary email to when the pipeline is completed.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails",
                    "fa_icon": "<i class=\"fas fa-exclamation-triangle\"></i>",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML",
                    "fa_icon": "<i class=\"fas fa-remove-format\"></i>",
                    "hidden": true,
                    "default": "False"
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs",
                    "fa_icon": "<i class=\"fas fa-palette\"></i>",
                    "hidden": true,
                    "default": "False"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports",
                    "default": "\"${params.outdir}/pipeline_info\"",
                    "fa_icon": "<i class=\"fas fa-cogs\"></i>",
                    "hidden": true
                },
                "clusterOptions": {
                    "type": "string",
                    "default": "false",
                    "description": "Arguments passed to Nextflow clusterOptions",
                    "hidden": true
                }
            }
        }
    }
}
